openapi: 3.0.3
info:
  title: Pokedex API
  description: ""
  version: 1.0.0
  contact:
    name: Joren Vandeweyer
    email: joren.vandeweyer@appwise.be
servers:
  - url: "http://localhost:3000/"
paths:
  /api/v1/pokemons:
    get:
      summary: Get all pokemons
      tags:
        - Pokemons
      parameters:
        - name: sort
          in: query
          description: Sort the pokemons
          required: false
          schema:
            type: string
            enum:
              - name-asc
              - name-desc
              - id-asc
              - id-desc

      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
  /api/v1/pokemons/{id}:
    get:
      summary: Get a pokemon by id
      tags:
        - Pokemons
      parameters:
        - name: id
          in: path
          description: The id of the pokemon to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonDetails'
        404:
          description: Pokemon not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/teams:
    get:
      summary: Get all teams
      tags:
        - Teams
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a new team
      tags:
        - Teams
      requestBody:
        description: Team to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /api/v1/teams/{id}:
    get:
      summary: Get a team by id
      tags:
        - Teams
      parameters:
        - name: id
          in: path
          description: The id of the team to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        404:
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Set Pokemons of a team
      tags:
        - Teams
      parameters:
        - name: id
          in: path
          description: The id of the team to set pokemons
          required: true
          schema:
            type: integer

      requestBody:
        description: Array of Pokemon id's to set
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pokemons:
                  type: array
                  items:
                    type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        404:
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/search:
    get:
      summary: Search for pokemons
      tags:
        - Search
      parameters:
        - name: query
          in: query
          description: Name or Type of the pokemon
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of results
          required: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'

  /api/v2/pokemons:
    get:
      summary: Get all pokemons paginated
      tags:
        - Pokemons
      parameters:
        - name: sort
          in: query
          description: Sort the pokemons
          required: false
          schema:
            type: string
            enum:
              - name-asc
              - name-desc
              - id-asc
              - id-desc
        - name: limit
          in: query
          description: Limit the number of pokemons
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Offset the number of pokemons
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pokemon'
                  metadata:
                    type: object
                    properties:
                      next:
                        type: string
                        description: Next page url
                      previous:
                        type: string
                        description: Previous page url
                      total:
                        type: integer
                        description: Total number of pokemons
                        format: int32
                      pages:
                        type: integer
                        description: Number of pages
                        format: int32
                      page:
                        type: integer
                        description: Current page
                        format: int32

components:
  schemas:
    Pokemon:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sprites:
          type: object
          properties:
            front_default:
              type: string
        types:
          type: array
          items:
            type: object
            properties:
              type:
                type: object
                properties:
                  name:
                    type: string
              slot:
                type: number
    PokemonDetails:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sprites:
          type: object
          properties:
            front_default:
              type: string
            front_female:
              type: string
            front_shiny:
              type: string
            front_shiny_female:
              type: string
            back_default:
              type: string
            back_female:
              type: string
            back_shiny:
              type: string
            back_shiny_female:
              type: string
        types:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              slot:
                type: number
        height:
          type: number
        weight:
          type: number
        moves:
          type: array
          items:
            type: object
            properties:
              move:
                type: string
              version_group_details:
                type: array
                items:
                  type: object
                  properties:
                    move_learn_method:
                      type: string
                    version_group:
                      type: string
                    level_learned_at:
                      type: number
        order:
          type: number
        species:
          type: string
        stats:
          type: array
          items:
            type: object
            properties:
              stat:
                type: string
              base_stat:
                type: number
              effort:
                type: number
        abilities:
          type: array
          items:
            type: object
            properties:
              ability:
                type: string
              is_hidden:
                type: boolean
              slot:
                type: number
        form:
          type: string
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pokemons:
          type: array
          items:
            type: integer
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string
        error_message:
          type: string
